#!/usr/bin/env bash
UNAME=$(uname)
source ~/.commonfuncs

# let's set a proper PATH
#########################

# This is an attempt to use a fancy path generator
# like the one in .zshenv
new_path=""
expected_path=(
  "$HOME/.dotfiles"
  ./bin
  "$HOME/bin/$MACHTYPE-$OSTYPE"
  "$HOME/bin"
  "$HOME/bin/git_achievements"
  "$HOME/elasticsearch-1.7.6/bin"
  "$HOME/.rbenv/shims"
  "$HOME/.rbenv/versions/2.3.1/bin"
  "$HOME/.rbenv/versions/2.2.6/bin"
  "$HOME/.rvm/bin"
  "$HOME/.gem/ruby/1.8/bin"
  "$HOME/.cargo/bin"
  "$HOME/Documents/android-sdk-mac-x86_64-20140321/tools"
  "$HOME/Documents/android-sdk-mac-x86_64-20140321/platform-tools"
  "$HOME/node_modules/jshint/bin"
  /usr/local/texlive/2015/bin/x86_64-darwin
  /opt/php53/bin
  /opt/local/apache2/bin
  /opt/python/bin
  /opt/local/bin
  /opt/local/sbin
  /opt/local/lib/postgresql94/bin
  /opt/local/lib/postgresql93/bin
  /opt/local/lib/postgresql91/bin
  /opt/local/lib/postgresql90/bin
  /opt/local/lib/postgresql83/bin
  /usr/local/opt/mysql@5.6/bin
  /usr/local/opt/mysql@5.7/bin
  /opt/local/lib/mysql56/bin
  /opt/local/lib/mysql55/bin
  /opt/local/lib/mysql5/bin
  /opt/local/lib/mysql4/bin
  /opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin
  /opt/local/Library/Frameworks/Python.framework/Versions/2.4/bin
  /opt/local/libexec/qt5/bin
  /usr/local/opt/qt/bin
  /usr/local/opt/node@6/bin
  /fuck/bin
  /sw/bin
  /sw/sbin
  /usr/bin/perlbin/site
  /usr/bin/perlbin/vendor
  /usr/bin/perlbin/core
  /usr/local/Cellar/python/2.7/bin
  /usr/local/bin
  /usr/local/sbin
  /usr/local/etc
  /usr/Programs/bin
  /sbin
  /bin
  /usr/bin
  /usr/sbin
  /usr/ucb
  /usr/bsd
  /usr/libexec
  /Developer/Tools
  /opt/ruby1.8/bin
  /usr/X11R6/bin
  /usr/X11/bin
  /usr/bin/X11
  /usr/local/X11/bin
  /usr/local/contrib/lib/kde/bin
  /usr/local/tex/bin
  /usr/local/lib/zsh/scr
  /usr/local/games
  /usr/games
  /etc
  "$HOME/.virtualenvs/tools/bin"
  "$HOME/.virtualenvs/tools3/bin"
)

for element in "${expected_path[@]}"
do
  if [ -d "$element" ]; then
    if [ -z $new_path ]; then
      new_path=$element
    else
      new_path=$new_path:$element
    fi
  fi
done

PATH=$new_path
export PATH

# Enable a few things for less (This will also apply to man)
#   * turn off case sensitive search (-I)
#   * display a long prompt with more info (-M)
#   * show colors instead of escape characters (-R)
#   * don't clear the screen on exit (-X)
export LESS="-IMRX"

# Force C style sorting (e.g. dotfiles, then Uppercase then lowercase)
export LC_COLLATE=C

# use a fancy terminal if we aren't using tmux
[ -z "$TMUX" ] && export TERM=xterm-256color

# conditionally set the editor variable
# TODO: get mvim -f to work with crontab some day :)
if checkPath nvim; then
    PREFERRED_EDITOR=nvim
elif checkPath vim; then
    PREFERRED_EDITOR=vim
elif checkPath mate_wait; then
    # to set this up you need to symlink the mate command
    #   $ cd ~/bin
    #   $ ln -s /path/to/mate mate_wait
    PREFERRED_EDITOR=mate_wait
else
    # there should be at least vi on the machine!
    PREFERRED_EDITOR=vi
fi

export EDITOR=$PREFERRED_EDITOR

if checkPath vimpager; then
    export PAGER=vimpager
    alias less=vimpager
    alias zless=vimpager
    # vim pager doesn't currently support ansi colors
    export GIT_PAGER=less
fi

# get crazy with python, and the cheese whiz
export PYTHONSTARTUP=$HOME/.pystartup

# Make sure ruby-build gets access to readline
# To check if it worked, do the following:
#   $ ruby -rreadline -e 'puts Readline::VERSION'
#   6.3
# You should see a version number and NOT 'editline'
[ -d "/opt/local" ] && export RUBY_CONFIGURE_OPTS="--with-readline-dir=/opt/local"

# pip settings
export PIP_FIND_LINKS="https://dist.sixfeetup.com/public/"

# set up some more OS X specific stuff
if [ "$UNAME" = "Darwin" ]; then
    # Figure out the major and minor version of OS X
    os_majorversion=$(sw_vers | awk '/ProductVersion/ {print $2}' | cut -f2 -d'.')
    os_minorversion=$(sw_vers | awk '/ProductVersion/ {print $2}' | cut -f3 -d'.')

    # to not tar up resource forks, you'll need this
    if [ "$os_majorversion" -ge 5 ]; then
        # Leopard version (and beyond??)
        export COPYFILE_DISABLE="True"
    elif [ "$os_majorversion" -eq 4 ] && [ "$os_minorversion" -ge 6 ]; then
        # Tiger version
        export COPY_EXTENDED_ATTRIBUTES_DISABLE="True"
    fi

fi

# colors!!!
###########

# for FreeBSD
# Pretty LSCOLORS explanation:
# http://www.mjxg.com/index.py/geek/lscolors_and_ls_colors
export LSCOLORS="exFxbxbhcxfxgxdxdhebeb"

# set the ACK match color scheme
export ACK_COLOR_MATCH="red"

export GREP_COLORS="ms=01;31:mc=01;31:sl=:cx=:fn=32:ln=36:bn=32:se=39"

# FZF
export FZF_DEFAULT_COMMAND='find -L . -type f -o -type d -o -type l | sed 1d | cut -b3- | grep -v -e .git/ -e .svn/ -e .hg/'
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
export FZF_DEFAULT_OPTS='--extended --multi --inline-info --prompt="fzf> "'
