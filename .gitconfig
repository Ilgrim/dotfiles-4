[core]
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore
[user]
	name = Clayton Parker
	email = me@claytron.com
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	whitespace = red reverse
	meta = yellow
	frag = magenta
	old = red
	new = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[alias]
	st = status -sb
	stu = status -s -uno
	stl = status --long
	ci = commit --verbose
	commit = commit --verbose
# Try to pull and rebase, but then stash and pop if it's dirty
	up = !git pull --rebase || ( git stash save && git pull --rebase && git stash pop )
	upd = !git pull --rebase origin dev || ( git stash save && git pull --rebase origin dev && git stash pop )
	br = branch
	brdel = !git branch --merged | grep -v '*' | grep -v master | grep -v dev | vipe | xargs -n 1 git branch -d
# Create a copy of the current branch, usually before rebasing. Prefix the branch with 'BAK_'
# Idea from: # http://kevinold.com/2012/07/06/git-backup-branches.html
	bak = !git branch `git branch | grep '*' | sed -e 's/* /BAK_/'`
	co = checkout
	df = diff
	dfs = diff --staged
	lg = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%cr)%Creset %Cblue%an%Creset %s %C(yellow)%d%Creset' --abbrev-commit --date=relative
# Use bang to be able to re-use the alias above (with pretty format) and add to it
	lgn = !git lg --branches --remotes --no-merges
	lga = !git lg --branches --remotes
	lgan = !git lg --branches --remotes --no-merges
	lgp = !git lg -p
	spo = stash pop
	sap = stash apply
	ssa = stash save
	sls = !git --no-pager stash list
	ssh = stash show -p
	psh = push origin HEAD
	pshf = push origin HEAD --force
	rbs = !git rebase -i `git merge-base HEAD origin/dev`
	rbc = rebase --continue
	rba = rebase --abort
	resolve = !vim $(git status -s | awk '/^UU / {print $2}' | head -1)
	resolved = !git add $(git status -s | awk '/^UU / {print $2}' | head -1)
[achievement]
	upload = true
[github]
	user = claytron
[branch "master"]
	remote = origin
	merge = master
[svn]
	authorsfile = /Users/clayton/.git-authorsfile
[branch]
	autosetuprebase = always
[diff]
	algorithm = patience
[push]
	default = current
